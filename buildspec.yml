version: 0.2

phases:
  install:
    commands:
# Installing and configure the ECS CLI on the build environment with the environment variables Encrypted
      - echo INSTALLING ECS_CLI
      - sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
      - sudo chmod +x /usr/local/bin/ecs-cli
      - ecs-cli -v

# configuring the ecs-cli for the cluster
      - ecs-cli configure --cluster $cluster_name --default-launch-type FARGATE --region $aws_default_region --config-name $config_name
      - ecs-cli configure profile --profile-name $profile_name --access-key $aws_access_key_id --secret-key $aws_secret_access_key
# # configuring the ecs-cli for the cluster
# ADD ENVIRONMENT VARIABLES AS NEEDED
#       - ecs-cli configure --cluster $cluster_name --default-launch-type FARGATE --region $aws_default_region --config-name $config_name
#       - ecs-cli configure profile --profile-name $profile_name --access-key $aws_access_key_id --secret-key $aws_secret_access_key
# # configuring the ecs-cli for the cluster
#       - ecs-cli configure --cluster $cluster_name --default-launch-type FARGATE --region $aws_default_region --config-name $config_name
#       - ecs-cli configure profile --profile-name $profile_name --access-key $aws_access_key_id --secret-key $aws_secret_access_key
      - DATETIME=$(date +%d%m%y__%H%M)
      - VERSION="$(git log --pretty=format:'%h' -n 1) $(date +%d:%m:%Y*****%H:%M)"
      - echo $VERSION

  pre_build:
    commands:
# Login to the ECR to perform the pull and push of the images. Generate authentication code and use the same token to login to the ECR
      - echo Logging.. in to Amazon ECR ....
      - eval $(aws ecr get-login --region $aws_default_region --no-include-email)
  build:
    commands:
# @ build , tag and push the images to the repo
      # - docker build -t cybsafe/phishtray:latest -f prod.Dockerfile .
      # - docker tag cybsafe/phishtray:latest $aws_account_id.dkr.ecr.eu-west-2.amazonaws.com/phishtray/django:newlatest
      # - docker push $aws_account_id.dkr.ecr.eu-west-2.amazonaws.com/phishtray/django:newlatest

  post_build:
    commands:
#--project-name is the task name, by default it uses this name as the task
# --File = docker compose file in the code directory
# --ecs-params = the parameters file which defines the container and the networking.
# --region = Region the definition needs to be spun up in.
# --launch-type FARGATE / EC2 cluster type

#FOR EC2 LAUNCH TYPE

     # - ecs-cli compose --project-name demo-django-compose --file docker-compose.yml --ecs-params ecs-params.yml --region $aws_default_region create --launch-type EC2
     # - ecs-cli compose up --region $aws_default_region --cluster Dev-Phishtray-101 --launch-type EC2



#FOR FARGATE***
#     - cd ./docker/prod
     - ecs-cli compose --file docker-compose.yml --ecs-params ecs-paramsEC2.yml --task-role-arn ecsTaskExecutionRole --region $aws_default_region create --launch-type EC2
     - ecs-cli compose up --region $aws_default_region --cluster Dev-201 --launch-type EC2
#     - ecs-cli compose --region $aws_default_region --cluster dev-201 --launch-type EC2 --file docker-compose.yml service up
